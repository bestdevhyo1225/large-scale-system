server:
  port: 9001
  tomcat:
    threads:
      min-spare: 20
      max: 150

spring:
  profiles:
    active: develop

  post:
    redis:
      enable: true

  feed:
    redis:
      enable: true

resilience4j:
  ratelimiter:
    #    configs:
    #      default:
    #       registerHealthIndicator: false # actuator를 통해 ratelimiter 상태를 체크하기 위한 여부
    #       allowHealthIndicatorToFail: false
    #       subscribeForEvents: true
    #       eventConsumerBufferSize: 50
    instances:
      findPostsRefreshTimelineUsecase:
#        baseConfig: default
        limitForPeriod: 3000 # limitRefreshPeriod 기간 동안 허용되는 요청 수
        limitRefreshPeriod: 1s # limitRefresh 기간 (초)
        timeoutDuration: 3s # 권한 acquire(허가)를 위해 스레드가 대기하는 시간 (초)
      findPostsTimelineUsecase:
#        baseConfig: default
        limitForPeriod: 3000
        limitRefreshPeriod: 1s
        timeoutDuration: 3s
      findPostsUsecase:
#        baseConfig: default
        limitForPeriod: 3000
        limitRefreshPeriod: 1s
        timeoutDuration: 3s
      findPostUsecase:
#        baseConfig: default
        limitForPeriod: 3000
        limitRefreshPeriod: 1s
        timeoutDuration: 3s

---
spring:
  config:
    activate:
      on-profile: develop

---
spring:
  config:
    activate:
      on-profile: production
